version: 2.0

jobs:
  test:
    working_directory: /tmp/project
    docker:
      - image: circleci/python:3.6.1
    steps:
      - checkout
      - run:
          name: install dig
          command: sudo apt-get update && sudo apt-get install dnsutils
      - run:
          name: Keyscan Github (HACK)
          command: ssh-keyscan $(dig +short github.com | tail -1) >> ~/.ssh/known_hosts
      - run:
          name: install dependencies
          command: |
            pip install --user -r requirements.txt
            pip install --user -r requirements-dev.txt
      - run:
          name: test
          command: ~/.local/bin/pytest
  deploy-canary:
    working_directory: /tmp/project
    docker:
      - image: circleci/python:3.6.1
    steps:
      - checkout
      - run:
          name: Install terraform
          command: |
            wget https://releases.hashicorp.com/terraform/0.11.7/terraform_0.11.7_linux_amd64.zip -P /tmp -O terraform.zip
            unzip /tmp/terraform.zip -d $CIRCLE_WORKING_DIRECTORY
      - deploy:
          name: Deploy to AWS
          command: |
            terraform init $CIRCLE_WORKING_DIRECTORY
            terraform apply -auto-approve -var version=canary -var "aws_access_key=$AWS_ACCESS_KEY_ID" -var "aws_secret_key=$AWS_SECRET_ACCESS_KEY" -var "aws_region=$AWS_DEFAULT_REGION"
  deploy-prod:
    working_directory: /tmp/project
    docker:
      - image: circleci/python:3.6.1
    steps:
      - checkout
      - run:
          name: Install terraform
          command: |
            wget https://releases.hashicorp.com/terraform/0.11.7/terraform_0.11.7_linux_amd64.zip -P /tmp -O terraform.zip
            unzip /tmp/terraform.zip -d $CIRCLE_WORKING_DIRECTORY
      - deploy:
          name: Deploy to AWS
          command: |
            terraform init $CIRCLE_WORKING_DIRECTORY
            terraform apply -auto-approve -var version=v1 -var "aws_access_key=$AWS_ACCESS_KEY_ID" -var "aws_secret_key=$AWS_SECRET_ACCESS_KEY" -var "aws_region=$AWS_DEFAULT_REGION"

workflows:
  version: 2
  test:
    jobs:
      - test:
          filters:
            branches:
              ignore:
                - master
  deploy-canary:
    jobs:
      - test:
          filters:
            branches:
              only: master
            tags:
              ignore: /^v.*/
      - deploy-canary:
          requires:
            - test
  deploy-prod:
    jobs:
      - test:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - deploy-prod:
          filters:
            tags:
              only: /^v.*/
          requires:
            - test
